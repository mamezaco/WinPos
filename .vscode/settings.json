{
	//
	//------ Uncrustify
	//
	//!!!! uncrustify で文字化けをなくす為
	// Use the --replace option from uncrustify to bypass VSCode's document handling
	//"uncrustify.useReplaceOption": true,
	//
	// Toggles the graphical config editor
	"uncrustify.graphicalConfig": true,
	// Path to the uncrustify configuration file
	"uncrustify.configPath.windows": "C:/Users/nak/Drive/MR/uncrustify.cfg",
	// Path to the uncrustify executable
	"uncrustify.executablePath.windows": "C:/Users/nak/Drive/Applications/uncrustify/uncrustify.exe",
	//"uncrustify.langOverrides": {},
	//
	// アニメーションでエディターをスクロールするかどうかを制御します
	"editor.smoothScrolling": true,
	//
	// ファイルを保存するときにフォーマットしてください。
	// フォーマッタを使用可能にして、ファイルを自動保存せず、エディターをシャットダウンしないでください。
	"editor.formatOnSave": true,
	// 貼り付けた内容がエディターにより自動的にフォーマットされるかどうかを制御します。
	// フォーマッタを使用可能にする必要があります。
	// また、フォーマッタがドキュメント内の範囲をフォーマットできなければなりません。
	"editor.formatOnPaste": false,
	// コードを書くときにフォーマットしてください。
	"editor.formatOnType": false,
	//
	// ウィンドウのズーム レベルを調整します。
	// 元のサイズは 0 で、1 つ上げるごとに (1 など) 20% ずつ拡大することを表し、
	// 1 つ下げるごとに (-1 など) 20% ずつ縮小することを表します。
	// 小数点以下の桁数を入力して、さらに細かくズームレベルを調整することもできます。
	"window.zoomLevel": -2, // -1.0,
	// フォントのサイズ
	"editor.fontSize": 17.0,
	// 行の高さを制御します。fontSize に基づいて lineHeight を計算する場合には、0 を使用します。
	"editor.lineHeight": 18,
	// 文字の間隔をピクセル単位で制御します。
	"editor.letterSpacing": 0.0,
	// 文字の太さを指定します。
	"editor.fontWeight": "100",
	// フォント ファミリを制御します。
	"editor.fontFamily": "'Office Code Pro', 'Office Code Pro2', 'Hack', 'Hack2', 'Roboto Mono', 'Roboto2'",
	// 1 つのタブに相当するスペースの数。
	// editor.detectIndentation` がオンの場合、この設定はファイル コンテンツに基づいて上書きされます。
	"editor.tabSize": 4,
	// エディターで空白文字を表示する方法を制御します。'none'、'boundary' および 'all' が使用可能です。
	// 'boundary' オプションでは、単語間の単一スペースは表示されません。
	"editor.renderWhitespace": "none",
	// カーソルのスタイルを制御します。
	// 指定できる値は 'block'、'block-outline'、'line'、'line-thin'、'underline'、'underline-thin' です
	"editor.cursorStyle": "line",
	// editor.cursorStyle が 'line' に設定されている場合、カーソルの幅を制御する
	"editor.cursorWidth": 3,
	// マウスを使用して複数のカーソルを追加するときに使用する修飾キーです。
	// `ctrlCmd` は Windows および Linux 上の `Control` キーと macOS 上の `Command` キーに割り当てます。
	// 「定義に移動」や「リンクを開く」のマウス操作は、マルチカーソルの修飾キーと競合しないように適用されます。
	"editor.multiCursorModifier": "alt",
	// 行の折り返し方法を制御します。次の値を指定できます。
	//  - 'off' (折り返さない),
	//  - 'on' (ビューポート折り返し),
	//  - 'wordWrapColumn' ('editor.wordWrapColumn' で折り返し) or
	//  - 'bounded' (ビューポートと 'editor.wordWrapColumn' の最小値で折り返し).
	"editor.wordWrap": "wordWrapColumn",
	// `editor.wordWrap` が `wordWrapColumn` または `bounded` の場合に、エディターの折り返し桁を制御します。
	"editor.wordWrapColumn": 128,
	// 折り返し行のインデント
	"editor.wrappingIndent": "none",
	// ルーラーの桁の位置
	"editor.rulers": [
		128
	],
	// 言語に対するファイルの関連付け (例 "*.extension": "html") を構成します。
	// これらの関連付けは、インストールされている言語の既定の関連付けより優先されます。
	"files.associations": {
		"*.c": "cpp",
		"*.cpp": "cpp",
		"*.h": "cpp",
		"*.vert": "cpp",
		"*.frag": "cpp",
		"*.i": "cpp",
	},
	// エディターで左角かっこの後に自動的に右角かっこを挿入するかどうかを制御します
	"editor.autoClosingBrackets": "never",
	// エディターでコードの折りたたみを有効にするかどうかを制御します
	"editor.folding": false,
	// 行番号の表示を制御します。
	"editor.lineNumbers": "off",
	// ミニマップを表示するかどうかを制御します
	"editor.minimap.enabled": false,
	// 入力中に候補を自動的に表示するかどうかを制御します
	"editor.quickSuggestions": {
		"other": true,
		"comments": true,
		"strings": true,
	},
	// クイック候補が表示されるまでの待ち時間 (ミリ秒) を制御します
	"editor.quickSuggestionsDelay": 480,
	// 選択範囲の角を丸くするかどうかを制御します
	"editor.roundedSelection": true,
	// 候補のウィジェットのフォント サイズ
	"editor.suggestFontSize": 0,
	// 候補のウィジェットの行の高さ
	"editor.suggestLineHeight": 0,
	// 有効にすると、ファイルの保存時に末尾の空白をトリミングします。
	"files.trimTrailingWhitespace": true,
	// 配色テーマ
	"workbench.colorTheme": "Tickle Contrast (rainglow)",
	// 空のエディターのグループにある最後のタブを閉じたときの動作を制御します。
	// 有効であるとき、空のグループは自動的に閉じられます。無効であるとき、空のグループはグリッドの一部として残ります。
	"workbench.editor.closeEmptyGroups": false,
	// 開かれるエディターをプレビューとして表示するかどうかを制御します。
	// プレビュー エディターは (例: ダブル クリックまたは編集などによって) 変更される時まで再利用し、斜体で表示します。
	"workbench.editor.enablePreview": false,
	//!!!! ワークベンチ下部にあるステータス バーで Twitter のフィードバック (スマイル) を表示するかどうかを制御します。
	//!!!! "workbench.statusBar.feedback.visible": false,
	//
	// 有効な場合、ファイルを開くときに文字セット エンコードを推測します。言語ごとに構成することも可能です。
	"files.autoGuessEncoding": true,
	// 新しいファイルに割り当てられる既定の言語モード。
	"files.defaultLanguage": "cpp",
	//
	// ファイルの読み取り/書き込みで使用する既定の文字セット エンコーディング。
	"files.encoding": "utf8bom",
	//
	// ファイルの読み取り/書き込みで使用する既定の文字セット エンコーディング。言語ごとに構成することも可能です。
	"[cpp]": {
		"files.encoding": "utf8bom",
		// デフォルトのフォーマッタを Uncrustify にする。
		"editor.defaultFormatter": "LaurentTreguier.uncrustify"
	},
	// すべて小文字のパターンの場合、大文字と小文字を区別しないで検索し、
	// そうでない場合は大文字と小文字を区別して検索する
	"search.smartCase": true,
	// `Ctrl` キーを押しながらマウス ホイールを使用してエディターのフォントをズームします。
	"editor.mouseWheelZoom": false,
	//
	// ScrollKey 用
	// scrolling lines(setting1)
	"scrollkey.line1": 2,
	// scrolling lines(setting2)
	"scrollkey.line2": 24,
	//
	"editor.glyphMargin": false,
	"editor.highlightActiveIndentGuide": false,
	//
	// タブ補完を有効にします。
	//  - on: タブ補完は、tab キーを押したときに最適な候補を挿入します。
	//  - off: タブ補完を無効にします。
	//  - onlySnippets: プレフィックスが一致する場合に、タブでスニペットを補完します。
	//    'quickSuggestions' が無効な場合に最適です。
	"editor.tabCompletion": "off",
	//
	"terminal.integrated.fontSize": 13.0,
	"markdown.preview.fontSize": 13.0,
	//
	// ユーザーが入力や貼り付け、行の移動をしたとき、
	// エディターがインデントを自動的に調整するかどうかを制御します。
	// 言語のインデント ルールを持つ拡張機能を使用できる必要があります。
	"editor.autoIndent": "full",
	//
	"workbench.quickOpen.closeOnFocusLost": false,
	"search.useGlobalIgnoreFiles": true,
	"scm.diffDecorationsGutterWidth": 1,
	"editor.mouseWheelScrollSensitivity": 3,
	"editor.scrollBeyondLastColumn": 0,
	//
	// ウィンドウタイトル
	"window.title": "${dirty}${activeFolderLong}${separator}${rootName}${separator}${appName}",
	// サイド バーの位置を制御します。ワークベンチの左右のいずれかに表示できます。
	"workbench.sideBar.location": "right",
	//
	// マルチコマンド
	"multiCommand.commands": [
		// 検索中のCtrl-w
		{
			"command": "multiCommand.find-ctrl-w",
			"sequence": [
				"cursorWordPartRightSelect",
				"actions.find",
			],
		},
		// 検索中のCtrl-e
		{
			"command": "multiCommand.find-ctrl-e",
			"sequence": [
				"cursorWordRightSelect",
				"actions.find",
			],
		},
	],
	//
	// AutoTimeStump 用
	"lpubsppop01.autoTimeStamp.lineLimit": 10,
	"lpubsppop01.autoTimeStamp.modifiedTimeStart": "Time-stamp: <",
	"lpubsppop01.autoTimeStamp.modifiedTimeEnd": ">",
	"lpubsppop01.autoTimeStamp.momentFormat": "YYYY/MM/DD HH:mm:ss \\T\\a\\t\\s\\u\\o\\ \\N\\a\\k\\a\\m\\u\\r\\a",
	//
	"workbench.editor.tabSizing": "shrink",
	"editor.insertSpaces": false,
	"editor.detectIndentation": false,
	//
	"workbench.enableExperiments": false,
	"breadcrumbs.enabled": false,
	//
	//------ git
	//
	"git.autofetch": true,
	"git.enableSmartCommit": true,
	"git.confirmSync": false,
	"git.postCommitCommand": "sync", // コミットの成功後、git コマンドを実行します。
	//
	//------ メモリ容量
	//
	"files.maxMemoryForLargeFilesMB": 4096,
	"C_Cpp.intelliSenseCacheSize": 8192,
	//
	//------ Microsoftへ送信しない
	//
	"telemetry.enableTelemetry": false,
	"telemetry.enableCrashReporter": false,
	//
	//------ その他
	//
	// "C_Cpp.intelliSenseEngine": "Tag Parser",
	"workbench.editor.highlightModifiedTabs": true,
	//
	//------
	//
	//
	//
	//------ EOF
}